import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";

import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser()

  if (!user) return null

  return <div className="flex gap-3 w-full">
    <Image src={user.imageUrl} alt="Profile image" className="w-14 h-14 full rounded-full" height={56} width={56} />
    <input type="text" placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props

  return (
    <div
      key={post.id}
      className="border-b border-slate-400 p-4 flex gap-3"
    >
      <Image src={author.imageUrl} alt={`@${author.username}'s profile picture`} className="w-14 h-14 full rounded-full" height={56} width={56} />
      <div className="flex flex-col">
        <div className="flex text-slate-300 gap-1">
          <span>{`@${author.username}`}</span>
          <pre>Â·</pre>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>
          {post.content}
        </span>
      </div>
    </div>
  );
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery()

  if (postsLoading) return <LoadingPage />

  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser()

  // start fetching asap
  api.posts.getAll.useQuery()

  // return empty div if user isn't loaded
  if (!userLoaded) return <div></div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 flex p-4">
            {!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
